Terminals unused in grammar

    UNKNOWN


State 63 conflicts: 9 shift/reduce
State 64 conflicts: 9 shift/reduce
State 65 conflicts: 9 shift/reduce
State 66 conflicts: 3 shift/reduce
State 67 conflicts: 3 shift/reduce
State 68 conflicts: 3 shift/reduce
State 69 conflicts: 3 shift/reduce
State 70 conflicts: 3 shift/reduce
State 71 conflicts: 3 shift/reduce
State 72 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: operation_list

    2 operation_list: operation_list operation
    3               | operation

    4 operation: declaration ';'
    5          | assignment ';'
    6          | print_opr ';'
    7          | if_opr
    8          | while_opr
    9          | for_opr
   10          | block_stmt

   11 scope_type: GLOBAL
   12           | LOCAL

   13 declaration: INT scope_type IDENTIFIER
   14            | STRING scope_type IDENTIFIER
   15            | INT scope_type IDENTIFIER '=' expr
   16            | STRING scope_type IDENTIFIER '=' expr

   17 assignment: IDENTIFIER '=' expr

   18 print_opr: PRINT '(' expr ')'

   19 if_opr: IF '(' expr ')' operation
   20       | IF '(' expr ')' operation ELSE operation

   21 while_opr: WHILE '(' expr ')' operation

   22 for_opr: FOR IDENTIFIER FROM expr TO expr STEP expr operation

   23 block_stmt: '{' operation_list '}'

   24 expr: expr '+' expr
   25     | expr '-' expr
   26     | expr '*' expr
   27     | expr '/' expr
   28     | expr '%' expr
   29     | expr '.' expr
   30     | expr COMPARE expr
   31     | expr AND expr
   32     | expr OR expr
   33     | '(' expr ')'
   34     | INT_LITERAL
   35     | STRING_LITERAL
   36     | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 28
    '(' (40) 18 19 20 21 33
    ')' (41) 18 19 20 21 33
    '*' (42) 26
    '+' (43) 24
    '-' (45) 25
    '.' (46) 29
    '/' (47) 27
    ';' (59) 4 5 6
    '=' (61) 15 16 17
    '{' (123) 23
    '}' (125) 23
    error (256)
    INT_LITERAL <ival> (258) 34
    IDENTIFIER <sval> (259) 13 14 15 16 17 22 36
    STRING_LITERAL <sval> (260) 35
    COMPARE <sval> (261) 30
    IF (262) 19 20
    ELSE (263) 20
    WHILE (264) 21
    FOR (265) 22
    FROM (266) 22
    TO (267) 22
    STEP (268) 22
    GLOBAL (269) 11
    LOCAL (270) 12
    PRINT (271) 18
    AND (272) 31
    OR (273) 32
    INT (274) 13 15
    STRING (275) 14 16
    UNKNOWN (276)


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program <node> (35)
        on left: 1
        on right: 0
    operation_list <node> (36)
        on left: 2 3
        on right: 1 2 23
    operation <node> (37)
        on left: 4 5 6 7 8 9 10
        on right: 2 3 19 20 21 22
    scope_type <node> (38)
        on left: 11 12
        on right: 13 14 15 16
    declaration <node> (39)
        on left: 13 14 15 16
        on right: 4
    assignment <node> (40)
        on left: 17
        on right: 5
    print_opr <node> (41)
        on left: 18
        on right: 6
    if_opr <node> (42)
        on left: 19 20
        on right: 7
    while_opr <node> (43)
        on left: 21
        on right: 8
    for_opr <node> (44)
        on left: 22
        on right: 9
    block_stmt <node> (45)
        on left: 23
        on right: 10
    expr <node> (46)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 15 16 17 18 19 20 21 22 24 25 26 27 28 29 30 31 32 33


State 0

    0 $accept: • program $end

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8

    program         go to state 9
    operation_list  go to state 10
    operation       go to state 11
    declaration     go to state 12
    assignment      go to state 13
    print_opr       go to state 14
    if_opr          go to state 15
    while_opr       go to state 16
    for_opr         go to state 17
    block_stmt      go to state 18


State 1

   17 assignment: IDENTIFIER • '=' expr

    '='  shift, and go to state 19


State 2

   19 if_opr: IF • '(' expr ')' operation
   20       | IF • '(' expr ')' operation ELSE operation

    '('  shift, and go to state 20


State 3

   21 while_opr: WHILE • '(' expr ')' operation

    '('  shift, and go to state 21


State 4

   22 for_opr: FOR • IDENTIFIER FROM expr TO expr STEP expr operation

    IDENTIFIER  shift, and go to state 22


State 5

   18 print_opr: PRINT • '(' expr ')'

    '('  shift, and go to state 23


State 6

   13 declaration: INT • scope_type IDENTIFIER
   15            | INT • scope_type IDENTIFIER '=' expr

    GLOBAL  shift, and go to state 24
    LOCAL   shift, and go to state 25

    scope_type  go to state 26


State 7

   14 declaration: STRING • scope_type IDENTIFIER
   16            | STRING • scope_type IDENTIFIER '=' expr

    GLOBAL  shift, and go to state 24
    LOCAL   shift, and go to state 25

    scope_type  go to state 27


State 8

   23 block_stmt: '{' • operation_list '}'

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8

    operation_list  go to state 28
    operation       go to state 11
    declaration     go to state 12
    assignment      go to state 13
    print_opr       go to state 14
    if_opr          go to state 15
    while_opr       go to state 16
    for_opr         go to state 17
    block_stmt      go to state 18


State 9

    0 $accept: program • $end

    $end  shift, and go to state 29


State 10

    1 program: operation_list •
    2 operation_list: operation_list • operation

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8

    $default  reduce using rule 1 (program)

    operation    go to state 30
    declaration  go to state 12
    assignment   go to state 13
    print_opr    go to state 14
    if_opr       go to state 15
    while_opr    go to state 16
    for_opr      go to state 17
    block_stmt   go to state 18


State 11

    3 operation_list: operation •

    $default  reduce using rule 3 (operation_list)


State 12

    4 operation: declaration • ';'

    ';'  shift, and go to state 31


State 13

    5 operation: assignment • ';'

    ';'  shift, and go to state 32


State 14

    6 operation: print_opr • ';'

    ';'  shift, and go to state 33


State 15

    7 operation: if_opr •

    $default  reduce using rule 7 (operation)


State 16

    8 operation: while_opr •

    $default  reduce using rule 8 (operation)


State 17

    9 operation: for_opr •

    $default  reduce using rule 9 (operation)


State 18

   10 operation: block_stmt •

    $default  reduce using rule 10 (operation)


State 19

   17 assignment: IDENTIFIER '=' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 38


State 20

   19 if_opr: IF '(' • expr ')' operation
   20       | IF '(' • expr ')' operation ELSE operation

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 39


State 21

   21 while_opr: WHILE '(' • expr ')' operation

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 40


State 22

   22 for_opr: FOR IDENTIFIER • FROM expr TO expr STEP expr operation

    FROM  shift, and go to state 41


State 23

   18 print_opr: PRINT '(' • expr ')'

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 42


State 24

   11 scope_type: GLOBAL •

    $default  reduce using rule 11 (scope_type)


State 25

   12 scope_type: LOCAL •

    $default  reduce using rule 12 (scope_type)


State 26

   13 declaration: INT scope_type • IDENTIFIER
   15            | INT scope_type • IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 43


State 27

   14 declaration: STRING scope_type • IDENTIFIER
   16            | STRING scope_type • IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 44


State 28

    2 operation_list: operation_list • operation
   23 block_stmt: '{' operation_list • '}'

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8
    '}'         shift, and go to state 45

    operation    go to state 30
    declaration  go to state 12
    assignment   go to state 13
    print_opr    go to state 14
    if_opr       go to state 15
    while_opr    go to state 16
    for_opr      go to state 17
    block_stmt   go to state 18


State 29

    0 $accept: program $end •

    $default  accept


State 30

    2 operation_list: operation_list operation •

    $default  reduce using rule 2 (operation_list)


State 31

    4 operation: declaration ';' •

    $default  reduce using rule 4 (operation)


State 32

    5 operation: assignment ';' •

    $default  reduce using rule 5 (operation)


State 33

    6 operation: print_opr ';' •

    $default  reduce using rule 6 (operation)


State 34

   34 expr: INT_LITERAL •

    $default  reduce using rule 34 (expr)


State 35

   36 expr: IDENTIFIER •

    $default  reduce using rule 36 (expr)


State 36

   35 expr: STRING_LITERAL •

    $default  reduce using rule 35 (expr)


State 37

   33 expr: '(' • expr ')'

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 46


State 38

   17 assignment: IDENTIFIER '=' expr •
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    $default  reduce using rule 17 (assignment)


State 39

   19 if_opr: IF '(' expr • ')' operation
   20       | IF '(' expr • ')' operation ELSE operation
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55
    ')'      shift, and go to state 56


State 40

   21 while_opr: WHILE '(' expr • ')' operation
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55
    ')'      shift, and go to state 57


State 41

   22 for_opr: FOR IDENTIFIER FROM • expr TO expr STEP expr operation

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 58


State 42

   18 print_opr: PRINT '(' expr • ')'
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55
    ')'      shift, and go to state 59


State 43

   13 declaration: INT scope_type IDENTIFIER •
   15            | INT scope_type IDENTIFIER • '=' expr

    '='  shift, and go to state 60

    $default  reduce using rule 13 (declaration)


State 44

   14 declaration: STRING scope_type IDENTIFIER •
   16            | STRING scope_type IDENTIFIER • '=' expr

    '='  shift, and go to state 61

    $default  reduce using rule 14 (declaration)


State 45

   23 block_stmt: '{' operation_list '}' •

    $default  reduce using rule 23 (block_stmt)


State 46

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr
   33     | '(' expr • ')'

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55
    ')'      shift, and go to state 62


State 47

   30 expr: expr COMPARE • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 63


State 48

   31 expr: expr AND • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 64


State 49

   32 expr: expr OR • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 65


State 50

   24 expr: expr '+' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 66


State 51

   25 expr: expr '-' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 67


State 52

   26 expr: expr '*' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 68


State 53

   27 expr: expr '/' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 69


State 54

   28 expr: expr '%' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 70


State 55

   29 expr: expr '.' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 71


State 56

   19 if_opr: IF '(' expr ')' • operation
   20       | IF '(' expr ')' • operation ELSE operation

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8

    operation    go to state 72
    declaration  go to state 12
    assignment   go to state 13
    print_opr    go to state 14
    if_opr       go to state 15
    while_opr    go to state 16
    for_opr      go to state 17
    block_stmt   go to state 18


State 57

   21 while_opr: WHILE '(' expr ')' • operation

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8

    operation    go to state 73
    declaration  go to state 12
    assignment   go to state 13
    print_opr    go to state 14
    if_opr       go to state 15
    while_opr    go to state 16
    for_opr      go to state 17
    block_stmt   go to state 18


State 58

   22 for_opr: FOR IDENTIFIER FROM expr • TO expr STEP expr operation
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    TO       shift, and go to state 74
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55


State 59

   18 print_opr: PRINT '(' expr ')' •

    $default  reduce using rule 18 (print_opr)


State 60

   15 declaration: INT scope_type IDENTIFIER '=' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 75


State 61

   16 declaration: STRING scope_type IDENTIFIER '=' • expr

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 76


State 62

   33 expr: '(' expr ')' •

    $default  reduce using rule 33 (expr)


State 63

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   30     | expr COMPARE expr •
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 30 (expr)]
    AND       [reduce using rule 30 (expr)]
    OR        [reduce using rule 30 (expr)]
    '+'       [reduce using rule 30 (expr)]
    '-'       [reduce using rule 30 (expr)]
    '*'       [reduce using rule 30 (expr)]
    '/'       [reduce using rule 30 (expr)]
    '%'       [reduce using rule 30 (expr)]
    '.'       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 64

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   31     | expr AND expr •
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 31 (expr)]
    AND       [reduce using rule 31 (expr)]
    OR        [reduce using rule 31 (expr)]
    '+'       [reduce using rule 31 (expr)]
    '-'       [reduce using rule 31 (expr)]
    '*'       [reduce using rule 31 (expr)]
    '/'       [reduce using rule 31 (expr)]
    '%'       [reduce using rule 31 (expr)]
    '.'       [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 65

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr
   32     | expr OR expr •

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 32 (expr)]
    AND       [reduce using rule 32 (expr)]
    OR        [reduce using rule 32 (expr)]
    '+'       [reduce using rule 32 (expr)]
    '-'       [reduce using rule 32 (expr)]
    '*'       [reduce using rule 32 (expr)]
    '/'       [reduce using rule 32 (expr)]
    '%'       [reduce using rule 32 (expr)]
    '.'       [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 66

   24 expr: expr • '+' expr
   24     | expr '+' expr •
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 24 (expr)]
    AND       [reduce using rule 24 (expr)]
    OR        [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 67

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   25     | expr '-' expr •
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 25 (expr)]
    AND       [reduce using rule 25 (expr)]
    OR        [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 68

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   26     | expr '*' expr •
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 26 (expr)]
    AND       [reduce using rule 26 (expr)]
    OR        [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 69

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   27     | expr '/' expr •
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 27 (expr)]
    AND       [reduce using rule 27 (expr)]
    OR        [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


State 70

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   28     | expr '%' expr •
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '.'      shift, and go to state 55

    COMPARE   [reduce using rule 28 (expr)]
    AND       [reduce using rule 28 (expr)]
    OR        [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 71

   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   29     | expr '.' expr •
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49

    COMPARE   [reduce using rule 29 (expr)]
    AND       [reduce using rule 29 (expr)]
    OR        [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 72

   19 if_opr: IF '(' expr ')' operation •
   20       | IF '(' expr ')' operation • ELSE operation

    ELSE  shift, and go to state 77

    ELSE      [reduce using rule 19 (if_opr)]
    $default  reduce using rule 19 (if_opr)


State 73

   21 while_opr: WHILE '(' expr ')' operation •

    $default  reduce using rule 21 (while_opr)


State 74

   22 for_opr: FOR IDENTIFIER FROM expr TO • expr STEP expr operation

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 78


State 75

   15 declaration: INT scope_type IDENTIFIER '=' expr •
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    $default  reduce using rule 15 (declaration)


State 76

   16 declaration: STRING scope_type IDENTIFIER '=' expr •
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55

    $default  reduce using rule 16 (declaration)


State 77

   20 if_opr: IF '(' expr ')' operation ELSE • operation

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '{'         shift, and go to state 8

    operation    go to state 79
    declaration  go to state 12
    assignment   go to state 13
    print_opr    go to state 14
    if_opr       go to state 15
    while_opr    go to state 16
    for_opr      go to state 17
    block_stmt   go to state 18


State 78

   22 for_opr: FOR IDENTIFIER FROM expr TO expr • STEP expr operation
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    COMPARE  shift, and go to state 47
    STEP     shift, and go to state 80
    AND      shift, and go to state 48
    OR       shift, and go to state 49
    '+'      shift, and go to state 50
    '-'      shift, and go to state 51
    '*'      shift, and go to state 52
    '/'      shift, and go to state 53
    '%'      shift, and go to state 54
    '.'      shift, and go to state 55


State 79

   20 if_opr: IF '(' expr ')' operation ELSE operation •

    $default  reduce using rule 20 (if_opr)


State 80

   22 for_opr: FOR IDENTIFIER FROM expr TO expr STEP • expr operation

    INT_LITERAL     shift, and go to state 34
    IDENTIFIER      shift, and go to state 35
    STRING_LITERAL  shift, and go to state 36
    '('             shift, and go to state 37

    expr  go to state 81


State 81

   22 for_opr: FOR IDENTIFIER FROM expr TO expr STEP expr • operation
   24 expr: expr • '+' expr
   25     | expr • '-' expr
   26     | expr • '*' expr
   27     | expr • '/' expr
   28     | expr • '%' expr
   29     | expr • '.' expr
   30     | expr • COMPARE expr
   31     | expr • AND expr
   32     | expr • OR expr

    IDENTIFIER  shift, and go to state 1
    COMPARE     shift, and go to state 47
    IF          shift, and go to state 2
    WHILE       shift, and go to state 3
    FOR         shift, and go to state 4
    PRINT       shift, and go to state 5
    AND         shift, and go to state 48
    OR          shift, and go to state 49
    INT         shift, and go to state 6
    STRING      shift, and go to state 7
    '+'         shift, and go to state 50
    '-'         shift, and go to state 51
    '*'         shift, and go to state 52
    '/'         shift, and go to state 53
    '%'         shift, and go to state 54
    '.'         shift, and go to state 55
    '{'         shift, and go to state 8

    operation    go to state 82
    declaration  go to state 12
    assignment   go to state 13
    print_opr    go to state 14
    if_opr       go to state 15
    while_opr    go to state 16
    for_opr      go to state 17
    block_stmt   go to state 18


State 82

   22 for_opr: FOR IDENTIFIER FROM expr TO expr STEP expr operation •

    $default  reduce using rule 22 (for_opr)
